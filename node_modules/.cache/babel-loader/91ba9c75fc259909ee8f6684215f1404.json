{"ast":null,"code":"var _jsxFileName = \"/home/pawel/Schreibtisch/java/todoWithReact/src/components/ToDoContainer.js\";\nimport React from 'react';\nimport TodoItem from \"./TodoItem/TodoItem\";\nimport Header from \"./Header\";\nimport Form from \"./InputTodo\";\nimport axios from \"axios\";\nconst link = 'http://localhost:3001/todos'; // class component\n\nclass TodoContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [],\n      isLoading: false,\n      timeToGetBusy: false\n    };\n\n    this.onChangeCheckbox = _id => {\n      const updatedTodosArr = this.state.todos.map(todo => {\n        if (todo._id === _id) {\n          todo.completed = !todo.completed;\n        }\n\n        return todo;\n      }); // console.log(updatedTodosArr);\n\n      this.setState({\n        todos: updatedTodosArr\n      });\n    };\n\n    this.deleteTodoHandler = _id => {\n      this.setState({\n        isLoading: true\n      });\n      axios.delete(`${link}/${_id}`).then(response => {\n        const deleteTodosArr = this.state.todos.filter(todo => todo._id !== response.data._id);\n        this.setState({\n          todos: deleteTodosArr,\n          isLoading: false\n        });\n      });\n    };\n\n    this.addTodo = newItem => {\n      this.setState({\n        isLoading: true\n      });\n      let newItemUpdate = {\n        title: newItem.title,\n        completed: false\n      };\n      axios.post(link, { ...newItemUpdate\n      }).then(response => {\n        axios.get(link).then(response => {\n          let data = response.data;\n          this.setState({\n            todos: data,\n            isLoading: false\n          });\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log('Komponente ist fertig (componentDidMount)');\n    axios.get(link).then(response => {\n      let data = response.data;\n      this.setState({\n        todos: data\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    this.state.todos.length >= 10 ? this.setState({\n      timeToGetBusy: true\n    }) : this.setState({\n      timeToGetBusy: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      style: this.state.isLoading ? {\n        opacity: 0.3\n      } : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      timeToGetBusy: /*#__PURE__*/React.createElement(\"h2\", {\n        style: this.state.timeToGetBusy ? null : {\n          display: none\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 42\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      addTodo: this.addTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, this.state.todos.map(todo => /*#__PURE__*/React.createElement(TodoItem, {\n      key: todo._id,\n      _id: todo._id,\n      title: todo.title,\n      completed: todo.completed,\n      handleChange: this.onChangeCheckbox,\n      deleteTodoHandler: this.deleteTodoHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }))));\n  }\n\n}\n\nexport default TodoContainer;","map":{"version":3,"sources":["/home/pawel/Schreibtisch/java/todoWithReact/src/components/ToDoContainer.js"],"names":["React","TodoItem","Header","Form","axios","link","TodoContainer","Component","state","todos","isLoading","timeToGetBusy","onChangeCheckbox","_id","updatedTodosArr","map","todo","completed","setState","deleteTodoHandler","delete","then","response","deleteTodosArr","filter","data","addTodo","newItem","newItemUpdate","title","post","get","componentDidMount","console","log","componentDidUpdate","length","render","opacity","display","none"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TodoItem from \"./TodoItem/TodoItem\";\nimport Header from \"./Header\";\nimport Form from \"./InputTodo\"\nimport axios from \"axios\";\n\nconst link = 'http://localhost:3001/todos';\n// class component\nclass TodoContainer extends React.Component {\n\n    state = {\n        todos: [\n        ],\n        isLoading: false,\n        timeToGetBusy: false\n    }\n    componentDidMount() {\n      console.log('Komponente ist fertig (componentDidMount)');\n      axios.get(link)\n          .then(\n              response => { let data = response.data \n              this.setState({\n                todos: data\n              })\n            } \n          );\n  }\n  componentDidUpdate(){\n    this.state.todos.length >= 10 ? this.setState({timeToGetBusy : true}) : this.setState({timeToGetBusy : false})\n  }\n    onChangeCheckbox = (_id) => {\n      const updatedTodosArr = this.state.todos.map(todo => {\n          if(todo._id === _id) {\n              todo.completed = !todo.completed;\n          }\n          return todo;\n      })\n      // console.log(updatedTodosArr);\n      this.setState( {\n          todos: updatedTodosArr\n      } );\n  }\n\n    deleteTodoHandler = (_id) => {\n      this.setState( { isLoading: true} );\n      axios.delete(`${link}/${_id}`)\n          .then(\n              response => { \n                const deleteTodosArr = this.state.todos.filter(todo => todo._id !== response.data._id)\n              this.setState({\n                todos: deleteTodosArr,\n                isLoading:false\n              })} \n          );\n    }\n    addTodo = (newItem) => {\n      this.setState( { isLoading: true} );\n      let newItemUpdate= {\n        title: newItem.title,\n        completed: false\n      } \n      axios.post(link, { ...newItemUpdate} )\n          .then(\n              response => {  \n                axios.get(link)\n          .then(\n              response => { let data = response.data \n              this.setState({\n                todos: data,\n                isLoading:false\n              })} \n          );\n                } \n          );\n    }\n    render() {\n        return (\n            <div className=\"container\" style={ this.state.isLoading ? {opacity: 0.3} : null }>\n                <Header timeToGetBusy = {<h2 style={this.state.timeToGetBusy ? null : {display: none}}></h2>}/>\n                <Form addTodo = {this.addTodo}/>\n                <ul>\n                    {\n                        this.state.todos.map(todo => (\n                            <TodoItem\n                                key={todo._id}\n                                _id={todo._id}\n                                title={todo.title}\n                                completed={todo.completed}\n                                handleChange={this.onChangeCheckbox}\n                                deleteTodoHandler={this.deleteTodoHandler}\n                              />\n                        ))\n                    }\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default TodoContainer;\n"]},"metadata":{},"sourceType":"module"}